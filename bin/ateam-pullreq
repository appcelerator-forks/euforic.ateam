#!/usr/bin/env node

/**
 * Module dependencies.
 */

require('shelljs/global');

var program = require('commander')
  , pullreq = require('../lib/pullreq')
  , AVAIL_CMDS = Object.keys(pullreq)
  , CUR_BRANCH = exec('git rev-parse --abbrev-ref HEAD',{ silent: true} ).output.replace(/\n/, '')
  , ORIGIN_URL = exec('git config --get remote.origin.url',{ silent: true} ).output.replace(/\n/, '')
  , REPO_PATH = ORIGIN_URL.replace('https://github.com/', '').replace('.git', '').split('/')
  , USER = REPO_PATH[0]
  , PROJECT_NAME = REPO_PATH[1];


// usage

program.usage('<platform> [prop]');

// examples

program.on('--help', function(){
  console.log('  submit <user>/<repo>            Submit a pull request');
  console.log('  view   <user>/<repo> [options]  Shows pull request(s)');
  console.log('');
});

program
  .option('-n, --name <ticket-name>', 'Pull request number')
  .option('-b, --browser', 'View pull request on github');

// parse argv

program.parse(process.argv);

// props

var command = program.args.shift();

var repo = program.args.shift();


// check command exists

if ( AVAIL_CMDS.indexOf(command) < 0 || !repo ) {
  exec('ateam pullreq --help');
  process.exit();
}

// execute command

switch(command) {
  case 'submit':
    submitPR(pullreq.submit);
    break;
  case 'view':
    var req = (program.num) ? '/' + program.num : 's/';
    if (program.browser) { exec('open https://github.com/' + repo + '/pull' + req ); }
    pullreq.view( repo, program.num||null );
    break;
  default:
    break;
}

/**
 * submitPR
 * @param  {Function} fn
 * @return null
 * @api private
 */

function submitPR(fn) {
  console.log('\n New Pull Request\n');
  program.prompt({
    title: '  title: ',
    owner: '  owner: ',
    repo:  '  repo(' + PROJECT_NAME + '): ',
    head:  '  head branch(' + CUR_BRANCH + '): ',
    base:  '  base branch(master): ',
    body:  '  comment(Completed: ' + (new Date()).toDateString() + '): '
  }, function ( res ) {

    // Set default values for empty responses

    res.user  = res.user  || USER;
    res.owner = res.owner || '';
    res.repo  = res.repo  || PROJECT_NAME;
    res.head  = res.head  || CUR_BRANCH;
    res.base  = res.base  || 'master';
    res.body  = res.body  || (new Date()).toDateString();
    res.repo  = res.repo  || REPO_PATH;

    // execute callback
    fn(res);
  });
}