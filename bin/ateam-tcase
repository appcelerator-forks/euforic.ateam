#!/usr/bin/env node

/**
 * Module dependencies.
 */

// inject shelljs to the global scope

require('shelljs/global');

var program = require('commander')
  , exec = require('child_process').exec
  , fs = require('fs');

// get latest titanium path

var TI_VER = ls(env.HOME + '/Library/Application Support/Titanium/mobilesdk/osx').pop();
var TI_PY = env.HOME + '/Library/Application\\ Support/Titanium/mobilesdk/osx/' +TI_VER+ '/titanium.py'


// usage

program.usage('<ticket> <platform>');

// examples

program.on('--help', function(){
  console.log('  ateam tcase <ticket> <platform>   creates a mobile web test case');
  console.log('  ateam tcase <ticket> done         removes the requested test case');
  console.log();
});

// parse argv

program.parse(process.argv);

// package

var ticket = program.args.shift();

// props

var platform = program.args.shift();

if(!platform){ return console.log('[Error]: No platform specified'); }

// remove test case project and exit if done

if (platform === 'close'){
  fs.exists('timob-'+ticket, function (exists) {
    if (exists) {
      rm('-rf', 'timob-' + ticket);
      console.log('[TIMOB-' + ticket + '] Test case as been removed');
    } else {
      console.log('[ERROR]: [TIMOB-' + ticket + '] Test case project not found')
    }
    process.exit();
  });
}

// create new titanium project for test case

var child = exec('python ' + TI_PY + ' create' +
  ' --id=timob-' + ticket +
  ' --name=timob-'+ticket +
  ' --platform=' + platform,
function ( code, output ){
  var resp = (code !== 0) ? output : '[TIMOB-'+ticket+'] Test case project created.';
});

