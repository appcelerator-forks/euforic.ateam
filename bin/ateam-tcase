#!/usr/bin/env node

/**
 * Module dependencies.
 */

// inject shelljs to the global scope

require('shelljs/global');

var program = require('commander')
  , fs = require('fs')
  , colors = require('colors')
  , TI_VER = ls(env.HOME + '/Library/Application Support/Titanium/mobilesdk/osx').pop();


// usage

program.usage('<command> <ticket-name> <platform>');

// options

program
  .option('-p, --platform [ios, iphone, ipad, android, mobileweb]', 'project platforms');

// examples

program.on('--help', function(){
  console.log('  open  <ticket-name>   creates a new Ti project to for a test case');
  console.log('  close <ticket-name>   removes the requested test case project');
  console.log();
});

// parse argv

program.parse(process.argv);

// properties

var command = program.args.shift();

var ticket = program.args.shift();

var platform = program.platform;

// remove test case project and exit if done

if (command === 'close'){
  fs.exists(ticket, function (exists) {
    if (exists) {
      rm('-rf', ticket);
      console.log(('\n  [#'+ticket.toUpperCase()+'] ').green, 'Test case as been removed\n'.grey);
    } else {
      console.error('\n  [ERROR]:'.red, '[#' + ticket + ']', 'Test case project not found\n'.grey);
    }
    process.exit((exists) ? 126 : 0);
  });
}


if (command === 'open') {
  // check for platform

  if(!platform){
    console.error('\n  [Error]:'.red, ' No platform specified\n'.grey);
    process.exit(126);
  }

  // generate titanium project for test case

  fs.exists(ticket, function (exists) {
    if (exists) {
      console.error('\n  [ERROR]:'.red, '[' + ticket + ']', 'Test case already exists\n'.grey);
      process.exit(126);
    }

    var resp = exec('ti create' +
      ' --id ' + ticket +
      ' --name ' + ticket +
      ' --platforms ' + platform +
      ' --workspace-dir ./',
      { silent : true }
    );
    // TODO better error checking
    console.log((resp.code) ? ('\n  [ERROR]: '.red + ' Test case not created.\n\n'.grey + (resp.output).grey) : ('\n  [#'+ticket.toUpperCase()+'] ').green + 'Test case project created.\n'.grey);
    process.exit(resp.code);
  });
}

if (command !== 'open' && command !== 'close') {
  // output error for invalid command
  console.error('\n  [ERROR]: '.red, 'Invalid command.');
  process.stdout.write(program.helpInformation());
  process.exit(127);
}