#!/usr/bin/env node

/**
 * Module dependencies.
 */

// inject shelljs to the global scope

require('shelljs/global');

var program = require('commander')
  , fs = require('fs')
  , colors = require('colors')
  , TI_VER = ls(env.HOME + '/Library/Application Support/Titanium/mobilesdk/osx').pop()
  , TI_PY = env.HOME + '/Library/Application\\ Support/Titanium/mobilesdk/osx/' +TI_VER+ '/titanium.py';


// usage

program.usage('<command> <ticket> <platform>');

// examples

program.on('--help', function(){
  console.log('  open  <number>   creates a new Ti project to for a test case');
  console.log('  close <number>   removes the requested test case project');
  console.log();
});

// parse argv

program.parse(process.argv);

// properties

var command = program.args.shift();

var ticket = program.args.shift();

var platform = program.args.shift();

// check for platform

if(!platform){ return console.log('\n  [Error]:'.red, ' No platform specified\n'.grey); }

// remove test case project and exit if done

if (command === 'close'){
  fs.exists('timob-'+ticket, function (exists) {
    if (exists) {
      rm('-rf', 'timob-' + ticket);
      console.log('\n  [TIMOB-' + ticket + ']', 'Test case as been removed\n'.grey);
    } else {
      console.log('\n  [ERROR]:'.red, '[TIMOB-' + ticket + ']', 'Test case project not found\n'.grey);
    }
    process.exit();
  });
}

// generate titanium project for test case


fs.exists('timob-'+ticket, function (exists) {

  if (exists) {
    console.log('\n  [ERROR]:'.red, '[TIMOB-' + ticket + ']', 'Test case already exists\n'.grey);
    process.exit();
  }

  var resp = exec('python ' + TI_PY + ' create' +
    ' --id=timob-' + ticket +
    ' --name=timob-'+ticket +
    ' --platform=' + platform,
    { silent: true }
  ).output.replace('\n', '');

  console.log( (!resp) ? ' [ERROR]: '.red  : '\n  [TIMOB-'+ticket+'] ', 'Test case project created.\n'.grey);
  process.exit();

});